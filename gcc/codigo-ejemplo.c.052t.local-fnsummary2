
;; Function suma (suma, funcdef_no=1, decl_uid=1944, cgraph_uid=2, symbol_order=1)


Analyzing function body size: suma/1

IPA function summary for suma/1
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:3.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:

int suma (int a, int b)
{
  int D.1964;
  int _3;

  <bb 2> :
  _3 = a_1(D) + b_2(D);

  <bb 3> :
<L0>:
  return _3;

}



;; Function main (main, funcdef_no=0, decl_uid=1945, cgraph_uid=1, symbol_order=0)


Analyzing function body size: main/0
		Accounting address calculation.

IPA function summary for main/0
  global time:     33.000000
  self size:       16
  global size:     16
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:7.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
  calls:
    suma/1 function not considered for inlining
      freq:1.00 loop depth: 1 size: 4 time: 13 callee size: 2 stack: 0
    suma/1 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 2 stack: 0

int main ()
{
  int i;
  int arr[10];
  int c;
  int b;
  int a;
  int D.1961;
  int _1;
  int _11;

  <bb 2> :
  a_4 = 20;
  b_5 = 30;
  c_6 = 0;
  c_9 = suma (a_4, b_5);
  i_10 = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = suma (a_4, b_5);
  arr[i_2] = _1;
  i_15 = i_2 + 1;

  <bb 4> :
  # i_2 = PHI <i_10(2), i_15(3)>
  if (i_2 < c_9)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _11 = 0;
  arr ={v} {CLOBBER};

  <bb 6> :
<L4>:
  return _11;

}


